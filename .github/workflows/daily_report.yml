name: Epic Seven Daily Report (Enhanced)

on:
  schedule:
    # 매일 오전 9시 KST (UTC 0시)
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      force_report:
        description: 'Force generate report'
        required: false
        default: 'false'
        type: boolean

jobs:
  daily-report:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    env:
      TZ: Asia/Seoul
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🔄 Sync with remote (Git conflict prevention)
        run: |
          git config --global user.email "epic7-report@github.com"
          git config --global user.name "Epic7 Daily Reporter"
          git pull --rebase origin main || {
            echo "Git pull failed, continuing with current state"
          }

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 🌐 Install Chrome (Simplified)
        run: |
          echo "=== Chrome 설치 시작 ==="
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          echo "Chrome 설치 완료: $(google-chrome --version)"

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "Python 패키지 설치 완료"

      - name: 📊 Generate daily report
        run: |
          echo "=== 일일 리포트 생성 시작 ==="
          echo "실행 시간: $(date '+%Y-%m-%d %H:%M:%S KST')"
          echo "강제 실행: ${{ github.event.inputs.force_report }}"
          
          python generate_report.py
          
          echo "일일 리포트 생성 완료: $(date '+%Y-%m-%d %H:%M:%S KST')"
        env:
          DISCORD_WEBHOOK_REPORT: ${{ secrets.DISCORD_WEBHOOK_REPORT }}
          PYTHONUNBUFFERED: 1

      - name: 📂 Upload report artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: daily-report-${{ github.run_number }}
          path: |
            *_debug_selenium.html
            *_error_debug.html
            crawled_links.json
            *.log
          retention-days: 30

      - name: 💾 Commit and push changes
        run: |
          echo "=== Git 변경사항 처리 ==="
          
          # 변경된 파일 확인
          git add -A
          
          if git diff --staged --quiet; then
            echo "변경 사항 없음"
          else
            echo "변경 사항 발견, 커밋 진행"
            git status --porcelain
            
            COMMIT_MSG="📊 일일 리포트 생성 - $(date '+%Y-%m-%d %H:%M KST')"
            git commit -m "$COMMIT_MSG"
            
            # 푸시 재시도 로직 (Git 충돌 해결)
            for i in {1..5}; do
              if git push; then
                echo "Git 푸시 완료"
                break
              else
                echo "Git 푸시 실패, 재시도 ($i/5)"
                git pull --rebase origin main
                sleep $((i * 2))
              fi
            done
          fi

      - name: 📈 Daily report summary
        if: always()
        run: |
          echo "=== 일일 리포트 실행 결과 ==="
          echo "작업 상태: ${{ job.status }}"
          echo "실행 시간: $(date '+%Y-%m-%d %H:%M:%S KST')"
          echo "워크플로우 번호: ${{ github.run_number }}"
          
          if [ -f "crawled_links.json" ]; then
            LINK_COUNT=$(cat crawled_links.json | jq '.links | length' 2>/dev/null || echo "0")
            echo "저장된 링크 수: $LINK_COUNT"
          fi
          
          echo "📬 Discord 웹훅으로 리포트 전송 완료"
          
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ 일일 리포트 성공적으로 완료"
          else
            echo "❌ 일일 리포트 실행 중 오류 발생"
          fi