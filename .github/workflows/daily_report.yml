name: Epic Seven Daily Report

on:
  schedule:
    # 매일 오전 9시 KST (UTC 0시)
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  daily-report:
    runs-on: ubuntu-latest
    
    env:
      TZ: Asia/Seoul
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Chrome and ChromeDriver (Compatible Version)
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
          # Chrome 버전 정확히 추출
          CHROME_VERSION=$(google-chrome --version | sed 's/.*Chrome \([0-9\.]*\).*/\1/')
          CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d'.' -f1)
          echo "Chrome 버전: $CHROME_VERSION (주버전: $CHROME_MAJOR_VERSION)"
          
          # 기존 ChromeDriver 제거
          sudo rm -f /usr/local/bin/chromedriver
          
          # 정확히 매칭되는 ChromeDriver 버전 찾기
          CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_${CHROME_MAJOR_VERSION}" || echo "")
          
          if [ -z "$CHROMEDRIVER_VERSION" ] || [ "$CHROMEDRIVER_VERSION" = "Not Found" ]; then
            echo "정확한 버전을 찾을 수 없어 안정 버전 사용"
            CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE" || echo "")
          fi
          
          if [ -z "$CHROMEDRIVER_VERSION" ]; then
            CHROMEDRIVER_VERSION="119.0.6045.105"
            echo "모든 API 실패, 하드코딩된 안정 버전 사용: $CHROMEDRIVER_VERSION"
          fi
          
          echo "선택된 ChromeDriver 버전: $CHROMEDRIVER_VERSION"
          
          # ChromeDriver 다운로드 및 설치
          DOWNLOAD_URL="https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip"
          
          if wget -q --spider "$DOWNLOAD_URL"; then
            wget -O /tmp/chromedriver.zip "$DOWNLOAD_URL"
            sudo unzip /tmp/chromedriver.zip -d /tmp/
            sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/
            sudo chmod +x /usr/local/bin/chromedriver
            echo "ChromeDriver 설치 완료: $(chromedriver --version 2>/dev/null || echo '버전 확인 실패')"
          else
            echo "다운로드 실패, 우분투 패키지 사용"
            sudo apt-get install -y chromium-chromedriver
            sudo ln -sf /usr/bin/chromedriver /usr/local/bin/chromedriver
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate daily report
        env:
          DISCORD_WEBHOOK_REPORT: ${{ secrets.DISCORD_WEBHOOK_REPORT }}
        run: python generate_report.py

      - name: Upload report artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: daily-report-${{ github.run_number }}
          path: |
            *.html
            *.json
            *.log
          retention-days: 30  # 리포트는 더 오래 보관

      - name: Archive old crawled links
        run: |
          # 일주일 이상된 링크 정리 (선택사항)
          if [[ -f crawled_links.json ]]; then
            echo "📊 현재 저장된 링크 수: $(jq length crawled_links.json 2>/dev/null || echo 'N/A')"
            # TODO: 필요시 오래된 링크 정리 로직 추가
          fi

      - name: Daily report summary
        run: |
          echo "📈 일일 리포트 생성 완료 - $(date '+%Y-%m-%d %H:%M:%S KST')"
          echo "📬 Discord 웹훅으로 리포트 전송됨"

      - name: Commit changes
        run: |
          git config --local user.email "epic7-report@github.com"
          git config --local user.name "Epic7 Report Bot"
          
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "📊 Daily report generated [$(date '+%Y-%m-%d %H:%M:%S KST')]"
            git push
          fi
