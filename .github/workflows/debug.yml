name: Epic7 Debug Simple
on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Test environment
      env:
        DISCORD_WEBHOOK_BUG: ${{ secrets.DISCORD_WEBHOOK_BUG }}
      run: |
        echo "=== 환경변수 테스트 ==="
        python -c "import os; print('Discord 웹훅:', 'Yes' if os.environ.get('DISCORD_WEBHOOK_BUG') else 'No')"
        
        echo "=== 모듈 테스트 ==="
        python -c "
        try:
            from crawler import crawl_arca_sites
            from classifier import is_bug_post
            from notifier import send_bug_alert
            print('모든 모듈 import 성공')
        except Exception as e:
            print(f'모듈 import 실패: {e}')
        "
        
        echo "=== 분류기 테스트 ==="
        python -c "
        from classifier import is_bug_post, classify_post
        test_titles = ['버그 발생', '좋은 업데이트', '일반 게시글']
        for title in test_titles:
            print(f'{title} -> {classify_post(title)}')
        "
    
    - name: Discord test
      env:
        DISCORD_WEBHOOK_BUG: ${{ secrets.DISCORD_WEBHOOK_BUG }}
      run: |
        echo "=== Discord 웹훅 테스트 ==="
        python -c "
        import os
        from notifier import send_bug_alert
        webhook_url = os.environ.get('DISCORD_WEBHOOK_BUG')
        if webhook_url:
            test_alerts = [{
                'title': '🧪 테스트 알림',
                'url': 'https://test.com',
                'timestamp': '2025-01-01T00:00:00',
                'source': 'stove_bug'
            }]
            send_bug_alert(webhook_url, test_alerts)
            print('테스트 알림 전송 완료')
        else:
            print('Discord 웹훅이 설정되지 않음')
        "
