name: 📊 Epic7 Sentiment Alert v6.0

on:
  schedule:
    # 30분마다 감성 데이터 통합 알림 (15분 후 10분 대기)
    - cron: '25,55 * * * *'
  workflow_dispatch:
    inputs:
      debug_mode:
        description: '🔍 Enable debug mode'
        required: false
        default: 'false'
        type: boolean
      alert_threshold:
        description: '📊 Alert threshold (0.1-1.0)'
        required: false
        default: '0.3'
        type: string

env:
  TZ: Asia/Seoul
  PYTHONUNBUFFERED: 1
  EXECUTION_LOCK_FILE: "sentiment_alert_running.lock"

jobs:
  sentiment-alert:
    name: 📊 감성 데이터 통합 알림
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 🔒 Check Execution Status
        id: status_check
        run: |
          echo "🔍 감성 알림 실행 상태 체크..."
          
          if [ -f "$EXECUTION_LOCK_FILE" ]; then
            lock_time=$(cat $EXECUTION_LOCK_FILE)
            current_time=$(date +%s)
            time_diff=$((current_time - lock_time))
            
            if [ $time_diff -gt 600 ]; then  # 10분 초과시 락 해제
              echo "⚠️ 오래된 락 파일 제거 ($time_diff초)"
              rm -f $EXECUTION_LOCK_FILE
              echo "can_execute=true" >> $GITHUB_OUTPUT
            else
              echo "⏸️ 이전 실행 진행 중 ($time_diff초)"
              echo "can_execute=false" >> $GITHUB_OUTPUT
              exit 0
            fi
          else
            echo "✅ 실행 가능"
            echo "can_execute=true" >> $GITHUB_OUTPUT
          fi
          
          echo $(date +%s) > $EXECUTION_LOCK_FILE

      - name: 🐍 Setup Python 3.11
        if: steps.status_check.outputs.can_execute == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install Dependencies
        if: steps.status_check.outputs.can_execute == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 📊 Execute Sentiment Data Processing
        if: steps.status_check.outputs.can_execute == 'true'
        env:
          DISCORD_WEBHOOK_SENTIMENT: ${{ secrets.DISCORD_WEBHOOK_SENTIMENT }}
          DEBUG_MODE: ${{ github.event.inputs.debug_mode || 'false' }}
          ALERT_THRESHOLD: ${{ github.event.inputs.alert_threshold || '0.3' }}
        run: |
          echo "📊 감성 데이터 처리 시작..."
          echo "⏰ 실행 시간: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "🎯 처리: 15분간 누적된 감성 데이터 통합 알림"
          echo "📈 임계값: $ALERT_THRESHOLD"
          
          # 플래그 설정
          debug_flag=""
          
          if [ "$DEBUG_MODE" = "true" ]; then
            debug_flag="--debug"
          fi
          
          # 감성 데이터 처리 및 알림
          python monitor_bugs.py --schedule 30min --threshold $ALERT_THRESHOLD $debug_flag
          
          echo "✅ 감성 데이터 처리 완료"

      - name: 📊 Processing Summary
        if: always() && steps.status_check.outputs.can_execute == 'true'
        run: |
          echo "📊 감성 알림 처리 요약:"
          echo "⏰ 완료 시간: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "🎯 모드: 30분 누적 감성 데이터 처리"
          echo "📈 임계값: ${{ github.event.inputs.alert_threshold || '0.3' }}"
          echo "🔍 디버그: ${{ github.event.inputs.debug_mode || 'false' }}"
          
          # 감성 데이터 파일 크기 확인
          if [ -f "daily_sentiment_data.json" ]; then
            file_size=$(du -h daily_sentiment_data.json | cut -f1)
            echo "💾 감성 데이터 파일: $file_size"
          fi

      - name: 🔄 Commit Changes
        if: success() && steps.status_check.outputs.can_execute == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Epic7 Sentiment Alert v6.0"
          
          if [[ -n $(git status --porcelain) ]]; then
            git add *.json *.html *.log 2>/dev/null || true
            git commit -m "📊 Sentiment Alert v6.0: $(date '+%Y-%m-%d %H:%M:%S')" || true
            git push || echo "⚠️ Push failed - continuing..."
            echo "✅ 변경사항 커밋 완료"
          fi

      - name: 🔓 Release Lock
        if: always() && steps.status_check.outputs.can_execute == 'true'
        run: |
          rm -f $EXECUTION_LOCK_FILE
          echo "✅ 실행 락 해제 완료"

  # 실패 시 알림
  failure-notification:
    name: 🚨 감성 알림 실패 통지
    runs-on: ubuntu-latest
    needs: [sentiment-alert]
    if: failure()

    steps:
      - name: 🚨 Send Failure Notification
        env:
          DISCORD_WEBHOOK_BUG: ${{ secrets.DISCORD_WEBHOOK_BUG }}
        run: |
          if [[ -n "$DISCORD_WEBHOOK_BUG" ]]; then
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d "{
                   \"embeds\": [{
                     \"title\": \"🚨 감성 알림 시스템 실패\",
                     \"description\": \"Epic7 감성 데이터 처리 중 오류 발생\",
                     \"color\": 15548997,
                     \"fields\": [
                       {
                         \"name\": \"⏰ 실패 시간\",
                         \"value\": \"$(date '+%Y-%m-%d %H:%M:%S %Z')\",
                         \"inline\": true
                       },
                       {
                         \"name\": \"🎯 처리 대상\",
                         \"value\": \"30분 누적 감성 데이터\",
                         \"inline\": true
                       },
                       {
                         \"name\": \"⏰ 다음 실행\",
                         \"value\": \"$(date -d '+30 minutes' '+%H:%M')\",
                         \"inline\": true
                       }
                     ]
                   }]
                 }" \
                "$DISCORD_WEBHOOK_BUG"
          fi