name: Epic Seven Monitor Health Check

on:
  schedule:
    - cron: "0 */6 * * *"  # 6시간마다 실행
  workflow_dispatch:
    inputs:
      full_check:
        description: 'Run full system check'
        required: false
        default: 'false'
        type: boolean
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'false'
        type: boolean

jobs:
  health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      TZ: Asia/Seoul
      DISCORD_WEBHOOK_REPORT: ${{ secrets.DISCORD_WEBHOOK_REPORT }}
      DISCORD_WEBHOOK_BUG: ${{ secrets.DISCORD_WEBHOOK_BUG }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 🌐 Install Chrome and ChromeDriver (호환성 강화)
        run: |
          echo "=== Chrome과 ChromeDriver 설치 시작 ==="

          sudo apt-get update -y
          sudo apt-get install -y google-chrome-stable

          CHROME_VERSION=$(google-chrome --version | cut -d' ' -f3)
          CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d'.' -f1)
          echo "🌐 Chrome 버전: $CHROME_VERSION (메이저: $CHROME_MAJOR_VERSION)"

          INSTALL_SUCCESS=false

          echo "📋 방법 1: Chrome for Testing API 시도"
          CHROMEDRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions.json" | \
            python3 -c "import sys, json; print(json.load(sys.stdin)['channels']['Stable']['downloads']['chromedriver'][0]['url'])" 2>/dev/null || echo "")
          if [ -n "$CHROMEDRIVER_URL" ] && [ "$CHROMEDRIVER_URL" != "null" ]; then
            wget -q "$CHROMEDRIVER_URL" -O /tmp/chromedriver.zip
            if [ -s /tmp/chromedriver.zip ]; then
              sudo unzip -q /tmp/chromedriver.zip -d /tmp/
              sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/ || sudo mv /tmp/chromedriver /usr/local/bin/
              sudo chmod +x /usr/local/bin/chromedriver
              if chromedriver --version >/dev/null 2>&1; then
                echo "✅ 방법 1 성공"
                INSTALL_SUCCESS=true
              fi
            fi
          fi

          if [ "$INSTALL_SUCCESS" != "true" ]; then
            echo "📋 방법 2: webdriver-manager (Python) 사용"
            pip install webdriver-manager
            cat <<EOF | python
from webdriver_manager.chrome import ChromeDriverManager
import shutil
import os

try:
    driver_path = ChromeDriverManager().install()
    shutil.move(driver_path, '/usr/local/bin/chromedriver')
    os.chmod('/usr/local/bin/chromedriver', 0o755)
    print('✅ 방법 2 성공: WebDriver Manager')
except Exception as e:
    print(f'❌ 방법 2 실패: {e}')
EOF
            if chromedriver --version >/dev/null 2>&1; then
              INSTALL_SUCCESS=true
            fi
          fi

          if [ "$INSTALL_SUCCESS" != "true" ]; then
            echo "📋 방법 3: apt로 설치 시도"
            sudo apt-get install -y chromium-chromedriver || true
            sudo ln -sf /usr/bin/chromedriver /usr/local/bin/chromedriver
            sudo chmod +x /usr/local/bin/chromedriver
            if chromedriver --version >/dev/null 2>&1; then
              echo "✅ 방법 3 성공"
              INSTALL_SUCCESS=true
            fi
          fi

          if [ "$INSTALL_SUCCESS" != "true" ]; then
            echo "❌ ChromeDriver 설치 실패"
            exit 1
          fi

      - name: 📦 Install dependencies
        run: |
          echo "=== requirements.txt 설치 시작 ==="
          pip install -r requirements.txt

      - name: 🧪 Run Python health check
        run: |
          echo "=== 시스템 헬스체크 실행 ==="
          echo "시간: $(date '+%Y-%m-%d %H:%M:%S')"
          python health_check.py --debug

      - name: 📤 실패 시 Webhook 알림
        if: failure()
        run: |
          echo "📡 알림 전송 시작"
          if [ ! -z "$DISCORD_WEBHOOK_BUG" ]; then
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d "{\"content\":
