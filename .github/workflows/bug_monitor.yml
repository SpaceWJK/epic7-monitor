name: Epic Seven Unified Bug Monitor

on:
  schedule:
    - cron: "*/15 * * * *"  # 15Î∂ÑÎßàÎã§
  workflow_dispatch:
    inputs:
      mode:
        description: 'Monitor mode (arca/global/all)'
        required: true
        default: 'all'
        type: choice
        options:
        - arca
        - global
        - all

jobs:
  monitor:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: ${{ github.event_name == 'workflow_dispatch' && fromJSON(format('["{0}"]', github.event.inputs.mode)) || '["arca", "global"]' }}
    
    env:
      TZ: Asia/Seoul
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
          # ÏÉàÎ°úÏö¥ Chrome for Testing API ÏÇ¨Ïö©
          CHROME_VERSION=$(google-chrome --version | sed 's/.*Chrome \([0-9\.]*\).*/\1/')
          echo "Chrome Î≤ÑÏ†Ñ: $CHROME_VERSION"
          
          # Chrome for Testing APIÏóêÏÑú ÏµúÏã† ÏïàÏ†ï Î≤ÑÏ†Ñ ÌôïÏù∏
          CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE")
          echo "ChromeDriver ÏïàÏ†ï Î≤ÑÏ†Ñ: $CHROMEDRIVER_VERSION"
          
          # ChromeDriver Îã§Ïö¥Î°úÎìú
          wget -O /tmp/chromedriver.zip "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip"
          
          # ChromeDriver ÏÑ§Ïπò
          sudo unzip /tmp/chromedriver.zip -d /tmp/
          sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          
          # ÏÑ§Ïπò ÌôïÏù∏
          echo "ÏÑ§ÏπòÎêú ChromeDriver Î≤ÑÏ†Ñ: $(chromedriver --version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run bug monitor - ${{ matrix.mode }}
        env:
          DISCORD_WEBHOOK_BUG: ${{ secrets.DISCORD_WEBHOOK_BUG }}
        run: python monitor_bugs.py --mode ${{ matrix.mode }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: monitor-${{ matrix.mode }}-${{ github.run_number }}
          path: |
            *.html
            crawled_links.json
          retention-days: 7

      - name: Commit changes
        run: |
          git config --local user.email "epic7-monitor@github.com"
          git config --local user.name "Epic7 Monitor Bot"
          
          if [[ -n $(git status --porcelain) ]]; then
            git add crawled_links.json
            git commit -m "üîç Update crawled links - ${{ matrix.mode }} [$(date '+%Y-%m-%d %H:%M:%S KST')]"
            git push
          fi
