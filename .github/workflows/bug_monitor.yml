name: Epic Seven Bug Monitor Dispatcher

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:
    inputs:
      mode:
        description: 'Monitor mode (korean/global/all)'
        required: false
        default: 'korean'
        type: choice
        options:
          - korean
          - global
          - all
      debug_mode:
        description: 'Enable debug mode'
        required: false
        default: 'false'
        type: boolean

jobs:
  # 한국 사이트 모니터링 워크플로우
  korean-monitor:
    if: ${{ inputs.mode == 'korean' || inputs.mode == 'all' || github.event_name == 'schedule' }}
    uses: ./.github/workflows/bug_monitor_korean.yml
    with:
      debug_mode: ${{ inputs.debug_mode == 'true' }}
      test_mode: false
    secrets: inherit

  # 글로벌 사이트 모니터링 워크플로우
  global-monitor:
    if: ${{ inputs.mode == 'global' || inputs.mode == 'all' }}
    uses: ./.github/workflows/bug_monitor_global.yml
    with:
      debug_mode: ${{ inputs.debug_mode == 'true' }}
    secrets: inherit

  # 디스패치 결과 종합 및 보고
  dispatch-summary:
    needs: [korean-monitor, global-monitor]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    env:
      TZ: Asia/Seoul
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Dispatch Summary Report
        run: |
          echo "============================================="
          echo "   Epic7 모니터링 워크플로우 디스패치 완료"
          echo "============================================="
          echo "실행 시간: $(date '+%Y-%m-%d %H:%M:%S KST')"
          echo "실행 모드: ${{ inputs.mode || 'scheduled' }}"
          echo "디버그 모드: ${{ inputs.debug_mode || 'false' }}"
          echo "트리거 유형: ${{ github.event_name }}"
          echo "워크플로우 번호: ${{ github.run_number }}"
          echo "실행 ID: ${{ github.run_id }}"
          echo ""
          
          # 각 워크플로우 실행 결과 확인
          KOREAN_RESULT="${{ needs.korean-monitor.result }}"
          GLOBAL_RESULT="${{ needs.global-monitor.result }}"
          
          echo "=== 워크플로우 실행 결과 ==="
          
          # 한국 사이트 모니터링 결과
          if [[ "${{ inputs.mode }}" == "korean" || "${{ inputs.mode }}" == "all" || "${{ github.event_name }}" == "schedule" ]]; then
            echo "🇰🇷 한국 사이트 모니터링:"
            echo "   - 크롤링 대상: STOVE, 아카라이브, 루리웹"
            echo "   - 워크플로우: bug_monitor_korean.yml"
            echo "   - 실행 결과: $KOREAN_RESULT"
            
            case "$KOREAN_RESULT" in
              "success")
                echo "   - 상태: ✅ 성공적으로 완료"
                ;;
              "failure")
                echo "   - 상태: ❌ 실행 실패"
                ;;
              "cancelled")
                echo "   - 상태: ⏹️ 실행 취소"
                ;;
              "skipped")
                echo "   - 상태: ⏭️ 건너뜀"
                ;;
              *)
                echo "   - 상태: ❓ 알 수 없음 ($KOREAN_RESULT)"
                ;;
            esac
            echo ""
          fi
          
          # 글로벌 사이트 모니터링 결과
          if [[ "${{ inputs.mode }}" == "global" || "${{ inputs.mode }}" == "all" ]]; then
            echo "🌍 글로벌 사이트 모니터링:"
            echo "   - 크롤링 대상: Reddit, 해외 포럼"
            echo "   - 워크플로우: bug_monitor_global.yml"
            echo "   - 실행 결과: $GLOBAL_RESULT"
            
            case "$GLOBAL_RESULT" in
              "success")
                echo "   - 상태: ✅ 성공적으로 완료"
                ;;
              "failure")
                echo "   - 상태: ❌ 실행 실패"
                ;;
              "cancelled")
                echo "   - 상태: ⏹️ 실행 취소"
                ;;
              "skipped")
                echo "   - 상태: ⏭️ 건너뜀"
                ;;
              *)
                echo "   - 상태: ❓ 알 수 없음 ($GLOBAL_RESULT)"
                ;;
            esac
            echo ""
          fi
          
          # 전체 결과 판정
          echo "=== 전체 실행 결과 ==="
          
          SUCCESS_COUNT=0
          TOTAL_COUNT=0
          
          if [[ "${{ inputs.mode }}" == "korean" || "${{ inputs.mode }}" == "all" || "${{ github.event_name }}" == "schedule" ]]; then
            TOTAL_COUNT=$((TOTAL_COUNT + 1))
            if [[ "$KOREAN_RESULT" == "success" ]]; then
              SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
            fi
          fi
          
          if [[ "${{ inputs.mode }}" == "global" || "${{ inputs.mode }}" == "all" ]]; then
            TOTAL_COUNT=$((TOTAL_COUNT + 1))
            if [[ "$GLOBAL_RESULT" == "success" ]]; then
              SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
            fi
          fi
          
          echo "실행된 워크플로우: $TOTAL_COUNT개"
          echo "성공한 워크플로우: $SUCCESS_COUNT개"
          echo "성공률: $(( SUCCESS_COUNT * 100 / TOTAL_COUNT ))%"
          echo ""
          
          if [[ $SUCCESS_COUNT -eq $TOTAL_COUNT ]]; then
            echo "🎉 모든 워크플로우가 성공적으로 완료되었습니다!"
            echo "   Epic7 모니터링 시스템이 정상적으로 작동하고 있습니다."
          elif [[ $SUCCESS_COUNT -gt 0 ]]; then
            echo "⚠️ 일부 워크플로우에서 문제가 발생했습니다."
            echo "   부분적으로 모니터링이 진행되었습니다."
          else
            echo "❌ 모든 워크플로우가 실패했습니다."
            echo "   시스템 점검이 필요합니다."
          fi
          
          echo ""
          echo "============================================="
          echo "   디스패치 보고서 생성 완료"
          echo "============================================="

      - name: 📈 System Status Check
        if: always()
        run: |
          echo "=== 시스템 상태 체크 ==="
          echo "메모리 사용량:"
          free -h
          echo ""
          echo "디스크 사용량:"
          df -h
          echo ""
          echo "현재 시간: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "업타임: $(uptime)"