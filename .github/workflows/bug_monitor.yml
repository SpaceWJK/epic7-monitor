name: 🎮 Epic Seven Bug Monitor (Integrated v3.1)

on:
  schedule:
    - cron: "*/15 * * * *"

  workflow_dispatch:
    inputs:
      debug_mode:
        description: '🔍 Enable debug mode for detailed logging'
        required: false
        default: 'false'
        type: boolean
      force_crawl:
        description: '🔄 Force crawl (ignore cache)'
        required: false
        default: 'false'
        type: boolean

env:
  TZ: Asia/Seoul
  PYTHONUNBUFFERED: 1

jobs:
  integrated-monitor:
    name: 🌐 Integrated Epic7 Monitor
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 🐍 Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 🔧 Install Chrome & ChromeDriver
        run: |
          # Chrome 138+ 호환성을 위한 설치
          echo "🌐 Installing Chrome and ChromeDriver..."
          
          # Chrome 설치
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
          # ChromeDriver 설치 (수정된 부분 - 완전한 버전 추출)
          CHROME_VERSION=$(google-chrome --version | grep -oE "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+")
          echo "Chrome version: $CHROME_VERSION"
          
          # ChromeDriver 다운로드 확인 후 설치
          wget -q "https://storage.googleapis.com/chrome-for-testing-public/$CHROME_VERSION/linux64/chromedriver-linux64.zip"
          unzip -q chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          
          # 임시 파일 정리
          rm -f chromedriver-linux64.zip
          rm -rf chromedriver-linux64
          
          # 설치 확인
          echo "✅ Chrome: $(google-chrome --version)"
          echo "✅ ChromeDriver: $(chromedriver --version)"

      - name: 📦 Install Python Dependencies
        run: |
          echo "📦 Installing Python dependencies..."
          python -m pip install --upgrade pip
          pip install -r requirements.txt --quiet
          
          echo "🔍 Package versions:"
          pip show selenium requests beautifulsoup4 deep-translator

      - name: 🚀 Run Integrated Epic7 Monitoring
        env:
          DISCORD_WEBHOOK_BUG: ${{ secrets.DISCORD_WEBHOOK_BUG }}
          DISCORD_WEBHOOK_REPORT: ${{ secrets.DISCORD_WEBHOOK_REPORT }}
          DEBUG_MODE: ${{ github.event.inputs.debug_mode || 'false' }}
          FORCE_CRAWL: ${{ github.event.inputs.force_crawl || 'false' }}
        run: |
          echo "🎮 Starting Epic7 Integrated Monitoring..."
          echo "⚙️ Debug Mode: $DEBUG_MODE"
          echo "🔄 Force Crawl: $FORCE_CRAWL"
          echo "⏰ Execution Time: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          
          # 조건별 실행
          if [ "$DEBUG_MODE" = "true" ] && [ "$FORCE_CRAWL" = "true" ]; then
            echo "🔍 Running in debug mode with force crawl..."
            python monitor_bugs.py --mode all --debug --force-crawl
          elif [ "$DEBUG_MODE" = "true" ]; then
            echo "🔍 Running in debug mode..."
            python monitor_bugs.py --mode all --debug
          elif [ "$FORCE_CRAWL" = "true" ]; then
            echo "🔄 Running with force crawl..."
            python monitor_bugs.py --mode all --force-crawl
          else
            echo "🚀 Running in normal mode..."
            python monitor_bugs.py --mode all
          fi

      - name: 📊 Monitor Execution Summary
        run: |
          echo "📊 Execution Summary:"
          echo "⏰ Completed at: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "🖥️ System Info:"
          echo "   Memory: $(free -h | grep Mem | awk '{print $3 "/" $2}')"
          echo "   Disk: $(df -h . | tail -1 | awk '{print $3 "/" $2 " (" $5 ")"}')"
          
          echo "📁 Generated Files:"
          ls -la *.json *.html *.log 2>/dev/null || echo "No output files found"

      - name: 🔄 Commit and Push Changes
        if: success()
        run: |
          echo "🔄 Committing changes..."
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [[ -n $(git status --porcelain) ]]; then
            echo "📝 Changes detected, committing..."
            git add *.json *.html *.log 2>/dev/null || true
            git commit -m "🤖 Epic7 Monitor: $(date '+%Y-%m-%d %H:%M:%S')" || true
            git push || echo "⚠️ Push failed - continuing..."
          else
            echo "✅ No changes to commit"
          fi

      - name: 📤 Upload Debug Artifacts
        if: failure() || github.event.inputs.debug_mode == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: debug-artifacts-${{ github.run_id }}
          path: |
            *.json
            *.log
            *.html
            debug/
          retention-days: 7

      - name: 🚨 Failure Notification
        if: failure()
        env:
          DISCORD_WEBHOOK_BUG: ${{ secrets.DISCORD_WEBHOOK_BUG }}
        run: |
          if [[ -n "$DISCORD_WEBHOOK_BUG" ]]; then
            echo "🚨 Sending failure notification to Discord..."
            
            curl -H "Content-Type: application/json" \
                 -X POST \
                 -d "{
                   \"embeds\": [{
                     \"title\": \"🚨 Epic7 Monitor 실행 실패\",
                     \"description\": \"Epic7 모니터링 시스템 실행 중 오류가 발생했습니다.\",
                     \"color\": 15548997,
                     \"fields\": [
                       {
                         \"name\": \"⏰ 실행 시간\",
                         \"value\": \"$(date '+%Y-%m-%d %H:%M:%S %Z')\",
                         \"inline\": true
                       },
                       {
                         \"name\": \"🔧 Debug 모드\",
                         \"value\": \"${{ github.event.inputs.debug_mode || 'false' }}\",
                         \"inline\": true
                       },
                       {
                         \"name\": \"🔗 실행 로그\",
                         \"value\": \"[View Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\",
                         \"inline\": false
                       }
                     ],
                     \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
                   }]
                 }" \
                 "$DISCORD_WEBHOOK_BUG"
            
            echo "✅ Failure notification sent"
          else
            echo "⚠️ Discord webhook not configured"
          fi
